// Code generated by goctl. DO NOT EDIT.
// Source: role.proto

package server

import (
	"context"

	"xihu/app/role/rpc/internal/logic"
	"xihu/app/role/rpc/internal/svc"
	"xihu/app/role/rpc/pb"
)

type RoleRpcServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedRoleRpcServer
}

func NewRoleRpcServer(svcCtx *svc.ServiceContext) *RoleRpcServer {
	return &RoleRpcServer{
		svcCtx: svcCtx,
	}
}

func (s *RoleRpcServer) GetVerCode(ctx context.Context, in *pb.GetVerCodeReq) (*pb.GetVerCodeResp, error) {
	l := logic.NewGetVerCodeLogic(ctx, s.svcCtx)
	return l.GetVerCode(in)
}

func (s *RoleRpcServer) Login(ctx context.Context, in *pb.LoginReq) (*pb.LoginResp, error) {
	l := logic.NewLoginLogic(ctx, s.svcCtx)
	return l.Login(in)
}

func (s *RoleRpcServer) Register(ctx context.Context, in *pb.RegisterReq) (*pb.RegisterResp, error) {
	l := logic.NewRegisterLogic(ctx, s.svcCtx)
	return l.Register(in)
}

func (s *RoleRpcServer) GetUserInfo(ctx context.Context, in *pb.GetUserInfoReq) (*pb.GetUserInfoResp, error) {
	l := logic.NewGetUserInfoLogic(ctx, s.svcCtx)
	return l.GetUserInfo(in)
}

func (s *RoleRpcServer) GenerateToken(ctx context.Context, in *pb.GenerateTokenReq) (*pb.GenerateTokenResp, error) {
	l := logic.NewGenerateTokenLogic(ctx, s.svcCtx)
	return l.GenerateToken(in)
}
